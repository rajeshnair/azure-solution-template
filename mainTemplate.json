{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUserName": {
            "metadata": {
                "description": "admin user name for the Virtual Machine."
            },
            "type": "string"
        },
        "clusterName": {
            "metadata": {
                "description": "Name of the Striim Cluster"
            },
            "type": "string"
        },
        "clusterNodeCount": {
            "defaultValue": 1,
            "metadata": {
                "description": "Number of VM to create"
            },
            "type": "int"
        },
        "clusterPassword": {
            "defaultValue": "",
            "metadata": {
                "description": "Password for the Striim cluster"
            },
            "type": "securestring"
        },
        "clusterVmSize": {
            "allowedValues": [
                "Standard_DS1_v2",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2",
                "Standard_DS14_v2",
                "Standard_DS15_v2"
            ],
            "defaultValue": "Standard_DS3_v2",
            "metadata": {
                "description": "Size of the VM"
            },
            "type": "string"
        },
        "companyName": {
            "defaultValue": "",
            "metadata": {
                "description": "Name of the company to which License is issued"
            },
            "type": "string"
        },
        "dnsPrefix": {
            "metadata": {
                "description": "DNS prefix for the VMs. DNS for node would be of form <dnsPrefix>-node0"
            },
            "type": "string"
        },
        "password": {
            "defaultValue": "",
            "metadata": {
                "description": "Password for admin user of the VM"
            },
            "type": "securestring"
        },
        "striimAdminPassword": {
            "defaultvalue": "",
            "metadata": {
                "description": "Password for 'admin' user of Striim."
            },
            "type": "securestring"
        },
        "striimLicenseKey": {
            "defaultValue": "",
            "metadata": {
                "description": "Enter the License Key that you received when you purchased this product, or leave blank to continue with a trial license.Keep it empty for trial for a single node trial license"
            },
            "type": "string"
        },
        "striimProductKey": {
            "defaultValue": "",
            "metadata": {
                "description": "Enter the Product Key that you received when you purchased this product, or leave blank to continue with a trial license."
            },
            "type": "string"
        }
    },
    "variables": {
        "addressPrefix": "10.0.0.0/16",
        "apiVersion": "2015-06-15",
        "imageReference": {
            "offer": "CentOS",
            "publisher": "OpenLogic",
            "sku": "6.7",
            "version": "latest"
        },
        "newStorageAccountName": "[concat(parameters('clusterName'),'store')]",
        "nicName": "striimNIC",
        "publicIPAddressName": "striimIP",
        "publicIPAddressType": "Dynamic",
        "storageAccountType": "Standard_LRS",
        "subnet1Name": "Subnet-1",
        "subnet1Prefix": "10.0.0.0/24",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
        "templateBaseUrl": "https://raw.githubusercontent.com/striim/azure-solution-template/master/",
        "virtualNetworkName": "striimVNET",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
    },
    "resources": [
        {
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "name": "[variables('newStorageAccountName')]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            },
            "type": "Microsoft.Storage/storageAccounts"
        },
        {
            "apiVersion": "2015-05-01-preview",
            "copy": {
                "count": "[parameters('clusterNodeCount')]",
                "name": "foo"
            },
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('publicIPAddressName'),copyIndex())]",
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[concat(parameters('dnsPrefix'), copyIndex())]"
                },
                "publicIPAllocationMethod": "Dynamic"
            },
            "type": "Microsoft.Network/publicIPAddresses"
        },
        {
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "name": "[variables('virtualNetworkName')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet1Prefix')]"
                        }
                    }
                ]
            },
            "type": "Microsoft.Network/virtualNetworks"
        },
        {
            "apiVersion": "2015-05-01-preview",
            "copy": {
                "count": "[parameters('clusterNodeCount')]",
                "name": "foo"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'),copyIndex())]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('nicName'),copyIndex())]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'),copyIndex()))]"
                            },
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            }
                        }
                    }
                ]
            },
            "type": "Microsoft.Network/networkInterfaces"
        },
        {
            "apiVersion": "2015-05-01-preview",
            "copy": {
                "count": "[parameters('clusterNodeCount')]",
                "name": "foo"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex())]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[concat(parameters('clusterName'),'-node',copyIndex())]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('clusterVmSize')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),copyIndex()))]"
                        }
                    ]
                },
                "osProfile": {
                    "adminPassword": "[parameters('password')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "computerName": "[concat(parameters('clusterName'),'-node',copyIndex())]"
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')]",
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "name": "[concat(parameters('clusterName'),'-osDisk')]",
                        "vhd": {
                            "uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/vhds/',parameters('clusterName'),copyIndex(), uniquestring(resourceGroup().id), 'osDisk.vhd')]"
                        }
                    }
                }
            },
            "type": "Microsoft.Compute/virtualMachines"
        },
        {
            "apiVersion": "2015-05-01-preview",
            "copy": {
                "count": "[parameters('clusterNodeCount')]",
                "name": "foo"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('clusterName'),'-node', copyIndex())]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[concat(parameters('clusterName'),'-node', copyIndex(),'/StriimConfigurer')]",
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {
                    "commandToExecute": "[concat('bash configureStriimServer.sh ',parameters('companyName'),' ',parameters('clusterName'),' ',parameters('clusterPassword'),' ',parameters('striimAdminPassword'),' ',parameters('striimProductKey'),' ',parameters('striimLicenseKey'))]",
                    "fileUris": [
                        "[concat(variables('templateBaseUrl'),'/configureStriimServer.sh')]"
                    ]
                },
                "type": "CustomScript",
                "typeHandlerVersion": "2.0"
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        }
    ],
    "outputs": {
        "serverPublicEndpoint": {
            "type": "string",
            "value": "[concat('http://',reference(concat(variables('publicIPAddressName'),'0')).dnsSettings.fqdn,':9080/')]"
        }
    }
}
