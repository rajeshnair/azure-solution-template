{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUserName": {
      "type": "string",
      "metadata": {
        "description": "admin user name for the Virtual Machine."
      }
    },
    "password": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Password for admin user of the VM"
      }
    },
    "dnsPrefix": {
        "type": "string",
        "metadata": {
            "description": "DNS prefix for the VMs. DNS for node would be of form <dnsPrefix>-node0"
        }
    },
    "clusterVmSize": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "metadata": {
        "description": "Size of the VM"
      },
	  "allowedValues": [
		"Standard_DS1_v2",
		"Standard_DS2_v2",
		"Standard_DS3_v2",
		"Standard_DS4_v2",
		"Standard_DS5_v2",
		"Standard_DS11_v2", 
		"Standard_DS12_v2", 
		"Standard_DS13_v2", 
		"Standard_DS14_v2", 
		"Standard_DS15_v2"
      ]
    },

    "clusterNodeCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of VM to create"
      }
    },
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Striim Cluster"
      }
    },
	"companyName":{
		"type": "string",
        "defaultValue": "",
		"metadata": {
			"description":"Name of the company to which License is issued" 
		}
	},
	"clusterPassword":{
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Striim cluster"
      }
	},
    "striimAdminPassword":{
        "type": "securestring",
        "defaultvalue":"",
        "metadata": {
            "description": "Password for 'admin' user of Striim."
        }
    },
	"striimProductKey":{
		"type": "string",
        "defaultValue": "",
		"metadata": {
			"description":"Enter the Product Key that you received when you purchased this product, or leave blank to continue with a trial license." 
		}
	},
	"striimLicenseKey":{
		"type": "string",
        "defaultValue": "",
		"metadata": {
			"description":"Enter the License Key that you received when you purchased this product, or leave blank to continue with a trial license.Keep it empty for trial for a single node trial license" 
		}
	}
  },
  "variables": {
	  "addressPrefix": "10.0.0.0/16",
	  "subnet1Name": "Subnet-1",
	  "subnet1Prefix": "10.0.0.0/24",
	  "publicIPAddressName": "sshIP",
	  "publicIPAddressType": "Dynamic",
	  "nicName": "sshNIC",
	  "storageAccountType": "Standard_LRS",
	  "virtualNetworkName": "sshVNET",
	  "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
	  "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
	  "templateBaseUrl": "https://raw.githubusercontent.com/striim/azure-solution-template/master/",
	  "newStorageAccountName": "[concat(parameters('clusterName'),'009')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('newStorageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPAddressName'),copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "foo",
        "count": "[parameters('clusterNodeCount')]"
      },
	  "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('dnsPrefix'), '-node', copyIndex())]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'),copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "foo",
        "count": "[parameters('clusterNodeCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'),copyIndex())]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'),copyIndex()))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('clusterName'),'-node',copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "foo",
        "count": "[parameters('clusterNodeCount')]"
      },
      "dependsOn": [
		"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex())]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('clusterVmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('clusterName'),'-node',copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('password')]"
        },
        "storageProfile": {
          "osDisk": {
            "name": "[concat(parameters('clusterName'),'-osDisk')]",
            "osType":"Linux",
            "image": {
                "uri":"http://vhdcreationrgdisks606.blob.core.windows.net/system/Microsoft.Compute/Images/vhds/Striim367-osDisk.19f42f18-3ecd-4e31-84df-3d1fef6aef39.vhd?sv=2014-02-14&sr=c&sig=yf3V%2Bj%2Fz3gZmFY%2BB4L7wJd3CxW%2FIe%2BDHb%2Bk6azO28oc%3D&st=2016-12-15T08%3A00%3A00Z&se=2016-12-23T08%3A00%3A00Z&sp=rl"
            },
            "vhd": {
                "uri": "[concat('http://', variables('newStorageAccountName'), '.blob.core.windows.net/vhds/', variables('clusterName'),copyIndex(),'-imgstrm-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),copyIndex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('clusterName'),'-node', copyIndex(),'/StriimConfigurer')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "foo",
        "count": "[parameters('clusterNodeCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('clusterName'),'-node', copyIndex())]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
			"[concat(variables('templateBaseUrl'),'/configureStriimServer.sh')]"
          ],
          "commandToExecute": "[concat('bash configureStriimServer.sh ',parameters('companyName'),' ',parameters('clusterName'),' ',parameters('clusterPassword'),' ',parameters('password'),' ',parameters('striimProductKey'),' ',parameters('striimLicenseKey'))]"
        }
      }
    }
  ]
}
